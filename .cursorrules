# Cursor IDE Project Rules

## ðŸš¨ CRITICAL WORKFLOW REMINDER ðŸš¨
**EVERY TIME YOU EDIT DEVELOPMENT_LOG.md:**
1. **FIRST: Verify current time using `mcp_time-server_get_current_time_utc_tool`**
2. **Use accurate UTC timestamp in log entry header**
3. IMMEDIATELY run: `git log -1 --oneline`
4. Check if commit exists in PROJECT_HISTORY.md
5. If missing, add to PROJECT_HISTORY.md
6. NO EXCEPTIONS - THIS IS MANDATORY

## Code Language Policy (MANDATORY)
- ALL source code MUST be written exclusively in ENGLISH
- This includes: variables, functions, classes, comments, documentation, strings, commit messages, error messages, logging, API responses
- NO exceptions - even if developer communicates in another language

## Communication Language Policy
- Assistant responses should match the developer's query language
- Code language remains English regardless of communication language

## Enforcement
- Never inject non-English languages into code
- Translate existing non-English code to English when modifying
- All new code follows English-only conventions

## Development Logging (MANDATORY)
- AFTER EVERY code modification, MUST document the change in docs/development/DEVELOPMENT_LOG.md
- Include: what changed, why changed, impact analysis
- Format: new log entry with timestamp, affected files, reasoning
- NO exceptions - even small changes must be logged

## Time Verification (MANDATORY)
- **BEFORE EVERY DEVELOPMENT_LOG.md entry, MUST verify current time using MCP Time Server**
- **ALWAYS use `mcp_time-server_get_current_time_utc_tool` for accurate UTC timestamp**
- **NEVER use placeholder dates or estimated times** 
- **Required format: ### Log Entry #XXX - 2025-06-21 14:01 UTC**
- **NO exceptions - timestamp accuracy is critical for development traceability**

## Git History Synchronization (MANDATORY - NO EXCEPTIONS)
- **IMMEDIATELY AFTER EVERY edit to DEVELOPMENT_LOG.md, MUST run `git log -1 --oneline`**
- **MANDATORY WORKFLOW: Edit DEVELOPMENT_LOG.md â†’ IMMEDIATELY check git â†’ Update ALL git log files**
- **CRITICAL: Check git commit count with `git rev-list --count HEAD`**
- **MUST synchronize ALL THREE git log files:**
  - docs/development/PROJECT_HISTORY.md
  - docs/development/COMPLETE_COMMIT_REFERENCE.md
  - docs/development/COMPLETE_COMMIT_REFERENCE_FULL.md
- **If git count > docs count: ADD missing commits to ALL files**
- **Update total commit counts in ALL files to match git**
- **FAILURE TO SYNC ALL GIT LOG FILES IS A CRITICAL RULE VIOLATION**

## Priority
- These rules override any other language preferences
- Code quality and international standards take precedence
- Development logging is mandatory for all code changes 