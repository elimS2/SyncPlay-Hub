# Cursor IDE Project Rules

## ðŸš¨ CRITICAL WORKFLOW REMINDER ðŸš¨
**EVERY TIME YOU EDIT DEVELOPMENT_LOG.md:**
1. IMMEDIATELY run: `git log -1 --oneline`
2. Check if commit exists in PROJECT_HISTORY.md
3. If missing, add to PROJECT_HISTORY.md
4. NO EXCEPTIONS - THIS IS MANDATORY

## Code Language Policy (MANDATORY)
- ALL source code MUST be written exclusively in ENGLISH
- This includes: variables, functions, classes, comments, documentation, strings, commit messages, error messages, logging, API responses
- NO exceptions - even if developer communicates in another language

## Communication Language Policy
- Assistant responses should match the developer's query language
- Code language remains English regardless of communication language

## Enforcement
- Never inject non-English languages into code
- Translate existing non-English code to English when modifying
- All new code follows English-only conventions

## Development Logging (MANDATORY)
- AFTER EVERY code modification, MUST document the change in docs/development/DEVELOPMENT_LOG.md
- Include: what changed, why changed, impact analysis
- Format: new log entry with timestamp, affected files, reasoning
- NO exceptions - even small changes must be logged

## Git History Synchronization (MANDATORY - NO EXCEPTIONS)
- **IMMEDIATELY AFTER EVERY edit to DEVELOPMENT_LOG.md, MUST run `git log -1 --oneline`**
- **MANDATORY WORKFLOW: Edit DEVELOPMENT_LOG.md â†’ IMMEDIATELY check git â†’ Update PROJECT_HISTORY.md if needed**
- Compare current git log with documented commits in PROJECT_HISTORY.md
- Add any missing commits to appropriate development phase in PROJECT_HISTORY.md
- Keep development timeline current and complete
- **FAILURE TO CHECK GIT AFTER DEVELOPMENT_LOG.md EDIT IS A CRITICAL RULE VIOLATION**

## Priority
- These rules override any other language preferences
- Code quality and international standards take precedence
- Development logging is mandatory for all code changes 